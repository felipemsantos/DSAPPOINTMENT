
{
  "swagger": "2.0",
  "info": {
    "description": "",    
    "version": "0.1",
    "title": "API Appointment"
  },

  "host": "api.orange.com",
  "basePath":	"/",
  "schemes": [
      "http"
  ],
  
  "consumes": [
      "application/json"
  ],
  "produces": [
      "application/json"
  ],  
  "paths": {   
    "/appointment": {                  
    "post": {
      "tags": [
         "appointment"
      ],            
      "operationId": "appointmentCreate",
      "summary": "create appointment",
      "description": "After checking free slots, this operation is used to create an appointment with all its characteristics.",       
      "deprecated": false,
      "parameters": [
      
                          
                      
        {
         "name": "appointment",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Appointment"
          }
        }
                  
      ],
            
       "responses": {
        "201": {
          "description": "Success",
            "schema": {
            
              "$ref": "#/definitions/Appointment"     
            
            }               
                                     
        },
          "400": {
            "description": "bad_request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }	
	
      }
  
    }
	,
    "get": {
      "tags": [
         "appointment"
      ],          
      "operationId": "appointmentList",
      "summary": "list appointment",
      "description": "This operation is used to retrieve appointment information using filter criteria. Especially criteria like period or party \nFiltering selection is enabled on all attributes: first level and inner classes",       
      "deprecated": false,
            
       "responses": {
        "200": {
          "description": "Success",
            "schema": {
                      
              "type": "array",
              "items": {
                "$ref": "#/definitions/Appointment"
              }
            
            }               
                                     
        },
          "400": {
            "description": "bad_request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }	
	
      }
  
    }
	
    },   
    "/appointment/{appointmentId}": {
    "get": {
      "tags": [
         "appointment"
      ],    
      "operationId": "appointmentGet",
      "summary": "get appointment",
      "description": "This operation is used to research an appointment by its identifier.\nNote that collections can be retrieved via GET /api/appointment with no {ID}",
      "deprecated": false,
            
      "parameters": [
      
                                  
            
        {
          "name": "appointmentId",
          "in": "path",
          "required": true,            
          "type": "string"
        }
        

      ],
            
       "responses": {
        "200": {
          "description": "Success",
            "schema": {
            
              "$ref": "#/definitions/Appointment"     
            
            }               
                                     
        },
          "404": {
            "description": "not_found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }	
	
      }
     
    }     
	,           
    "patch": {
      "tags": [
         "appointment"
      ],            
      "operationId": "appointmentPatch",
      "summary": "patch appointment",
      "description": "This operation can be used to update an appointment if information has changed. \nThis is also used to cancel an appointment by modifying the status. The new status is ‘cancelled’.",      
      "deprecated": false, 
      "parameters": [
      
                                  
            
        {
          "name": "appointmentId",
          "in": "path",
          "required": true,            
          "type": "string"
        }
  ,       
        {
         "name": "appointment",
         "in": "body",
         "required": true,
         "schema": {
           "$ref": "#/definitions/Appointment"
         }
        }
                                       
      ], 
            
       "responses": {
        "200": {
          "description": "Success",
            "schema": {
            
              "$ref": "#/definitions/Appointment"     
            
            }               
                                     
        }
      }
            
    }
	
    },   
    "/freeSlot/search": {
    "post": {
      
      "tags": [
         "freeSlot"
      ],            
      "operationId": "slot_search_outSearch",
      "summary": "Search",
      "description": "",       
      "deprecated": false,
        
      "parameters": [
      
                          
        
        {
          "name": "criteria",
          "in": "body",
          "required": true,            
          "description": "",
          
          "schema": {
            "$ref": "#/definitions/Schedule"
          }                       
        }    
  
                                
      ],
            
       "responses": {
        "200": {
          "description": "Success",
            "schema": {
            
              "$ref": "#/definitions/Slot_search_out"     
            
            }               
                                     
        }
      }
  
    }
	
    }
  },
"definitions": {
  

    "Appointment": {
      
      "type": "object",
      "properties": {      
      
        "alarm": {
          
          "type": "boolean"
        }
        ,
        "attachment": {
          
              "type": "array",
              "items": {
                  
                "$ref": "#/definitions/CalendarEntryAttachment"
  
              }
            
        }
        ,
        "category": {
          
          "type": "string"
        }
        ,
        "endDate": {
          
          "type": "string",
          "format": "date-time"
        }
        ,
        "alarmAction": {
          
          "type": "string"
        }
        ,
        "creationDate": {
          
          "type": "string",
          "format": "date-time"
        }
        ,
        "href": {
          
          "type": "string"
        }
        ,
        "lastUpdate": {
          
          "type": "string",
          "format": "date-time"
        }
        ,
        "startDate": {
          
          "type": "string",
          "format": "date-time"
        }
        ,
        "description": {
          
          "type": "string"
        }
        ,
        "externalId": {
          
          "type": "string"
        }
        ,
        "id": {
          
          "type": "string"
        }
        ,
        "status": {
          
          "type": "string",    
          "enum": [   
          
            "Missed",
            "Attented",
            "Completed",
            "Cancelled",
            "Validated",
            "Initialised"
          ]
  
        }
        ,
        "relatedParty": {
          
              "type": "array",
              "items": {
                  
                "$ref": "#/definitions/RelatedPartyRef"
  
              }
            
        }
        ,
        "address": {
          
                "$ref": "#/definitions/Address"
  
        }
        ,
        "relatedObject": {
          
              "type": "array",
              "items": {
                  
                "$ref": "#/definitions/RelatedObject"
  
              }
            
        }
        ,
        "note": {
          
              "type": "array",
              "items": {
                  
                "$ref": "#/definitions/Note"
  
              }
            
        }
        
      }
    }
                
  ,
  

    "RelatedPartyRef": {
      
      "type": "object",
      "properties": {      
      
        "href": {
          
          "type": "string"
        }
        ,
        "id": {
          
          "type": "string"
        }
        ,
        "role": {
          
          "type": "string"
        }
        ,
        "name": {
          
          "type": "string"
        }
        
      }
    }
                
  ,
  

    "RelatedObject": {
      
      "type": "object",
      "properties": {      
      
        "involvement": {
          
          "type": "string"
        }
        ,
        "reference": {
          
          "type": "string"
        }
        
      }
    }
                
  ,
  

    "Address": {
      
      "type": "object",
      "properties": {      
      
        "id": {
          
              "type": "array",
              "items": {
                  
          "type": "string"
              }
            
        }
        ,
        "href": {
          
              "type": "array",
              "items": {
                  
          "type": "string"
              }
            
        }
        
      }
    }
                
  ,
  

    "CalendarEntryAttachment": {
      
      "type": "object",
      "properties": {      
      
        "href": {
          
          "type": "string"
        }
        
      }
    }
                
  ,
  

    "Note": {
      
      "type": "object",
      "properties": {      
      
        "author": {
          
          "type": "string"
        }
        ,
        "date": {
          
          "type": "string",
          "format": "date-time"
        }
        ,
        "text": {
          
          "type": "string"
        }
        
      }
    }
                
  ,
  

    "Schedule": {
      
      "type": "object",
      "properties": {      
      
        "appointmentId": {
          
          "type": "string"
        }
        ,
        "category": {
          
          "type": "string"
        }
        ,
        "favoriteAmpm": {
          
          "type": "string",    
          "enum": [   
          
            "AM",
            "PM"
          ]
  
        }
        ,
        "endDate": {
          
          "type": "string",
          "format": "date-time"
        }
        ,
        "limit": {
          
          "type": "string"
        }
        ,
        "marketSegment": {
          
          "type": "string"
        }
        ,
        "startDate": {
          
          "type": "string",
          "format": "date-time"
        }
        ,
        "weekNumber": {
          
          "type": "string"
        }
        ,
        "relatedParty": {
          
              "type": "array",
              "items": {
                  
                "$ref": "#/definitions/RelatedPartyRef"
  
              }
            
        }
        ,
        "productSpecification": {
          
              "type": "array",
              "items": {
                  
                "$ref": "#/definitions/ProductSpecificationRef"
  
              }
            
        }
        
      }
    }
                
  ,
  

    "ProductSpecificationRef": {
      
      "type": "object",
      "properties": {      
      
        "id": {
          
          "type": "string"
        }
        ,
        "href": {
          
          "type": "string"
        }
        
      }
    }
                
  ,
  

    "FreeSlot": {
      
      "type": "object",
      "properties": {      
      
        "endDate": {
          
          "type": "string",
          "format": "date-time"
        }
        ,
        "startDate": {
          
          "type": "string",
          "format": "date-time"
        }
        ,
        "relatedParty": {
          
              "type": "array",
              "items": {
                  
                "$ref": "#/definitions/RelatedPartyRef"
  
              }
            
        }
        
      }
    }
                
  ,
  

    "Slot_search_out": {
      
      "type": "object",
      "properties": {      
      
        "slots": {
          
              "type": "array",
              "items": {
                  
                "$ref": "#/definitions/FreeSlot"
  
              }
            
        }
        
      }
    }
                
  ,
  
    "Error": {
      "required": [
          "code",
          "message"
      ],      
      "properties": {
        "code": {
          "description": "An integer coding the error type. This is given to caller so he can translate them if required.",
          "type": "integer"
        },
        "message": {
          "description": "A short localized string that describes the error.",
          "type": "string"
        },
        "description": {
          "description": "(optional) A long localized error description if needed. It can contain precise information about which parameter is missing, or what are the identifier acceptable values.",
          "type": "string"
        },
        "infoURL": {
          "description": "(optional) A URL to online documentation that provides more information about the error.",
          "type": "string"
        }
      }
    }
  }
}
	